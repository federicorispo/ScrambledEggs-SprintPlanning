{"version":3,"sources":["components/HeadingTitle.js","DataBlock.js","components/TeamMate.js","components/HoursPlanning.js","components/HomePage.js","routing/PATHS.js","routing/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["HeadingTitle","react_default","a","createElement","className","DataBlock","team","Object","classCallCheck","this","BehaviorSubject","_team","total","emergency","calculateTotal","createClass","key","value","mateName","index","findIndex","mate","name","undefined","newMate","_objectSpread","defineProperty","next","_this","forEach","mateTotal","d","h","efficiency","getValue","TeamMate","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","_onChangeD","ev","target","parseFloat","dataBlock","changeValue","_onChangeH","_onChangeEff","inherits","type","onChange","React","Component","HoursPlanning","_onChangeEmergency","changeEmergency","_subscriptions","state","_this2","push","subscribe","setState","_this3","table","TeamMate_TeamMate","title","HomePage","frontEndTeamBlock","backEndTeamBlock","HoursPlanning_HoursPlanning","PATHS","MAIN","process","AppRouter","react_router","path","exact","component","App","react_router_dom","routing_AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.115fc979.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"../style/App.scss\";\n\nexport function HeadingTitle() {\n  return (\n    <div className=\"heading\">\n      <h1>New Bacon Monster</h1>\n      <h2>Sprint Planning</h2>\n    </div>\n  )\n}\n","\nimport {concat, findIndex, forEach, remove} from 'lodash';\nimport { BehaviorSubject } from 'rxjs';\n\nexport class DataBlock {\n\n  team;\n  _team;\n\n  total;\n  emergency;\n\n  constructor(team) {\n    this.team = new BehaviorSubject(team);\n    this._team = team;\n    this.total = new BehaviorSubject(0);\n    this.emergency = new BehaviorSubject(20);\n\n    this.calculateTotal();\n  }\n\n  changeValue(mateName, key, value) {\n    const index = findIndex(this._team, (mate) => {return mate.name === mateName});\n    if (index !== undefined) {\n      const newMate = {\n        ...this._team[index],\n        [key]: value\n      };\n      this._team[index] = newMate;\n      this.team.next(this._team);\n    }\n    this.calculateTotal();\n  }\n\n  changeEmergency(value) {\n    this.emergency.next(value);\n    this.calculateTotal();\n  }\n  calculateTotal() {\n    let total = 0;\n    forEach(this._team, (mate) => {\n      const mateTotal = (((mate.d*8) + mate.h)/100 * mate.efficiency)/100*(100-this.emergency.getValue());\n      total = total + mateTotal;\n    });\n    this.total.next(total);\n  }\n\n}","import React from 'react';\nimport {forEach} from 'lodash'\n\nimport \"../style/App.scss\";\nimport PropTypes from \"prop-types\";\nimport {DataBlock} from \"../DataBlock\";\n\nexport class TeamMate extends React.Component {\n\n  static propTypes = {\n    mate: PropTypes.object,\n    dataBlock: PropTypes.instanceOf(DataBlock)\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  _onChangeD = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    this.props.dataBlock.changeValue(this.props.mate.name, 'd', value)\n  };\n\n  _onChangeH = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    this.props.dataBlock.changeValue(this.props.mate.name, 'h', value)\n  };\n\n  _onChangeEff = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    this.props.dataBlock.changeValue(this.props.mate.name, 'efficiency', value)\n  };\n\n  render() {\n    const {mate} = this.props;\n    const total = ((mate.d*8) + mate.h)/100 * mate.efficiency;\n\n    return (\n      <div className=\"teammate\">\n        <div className=\"column\">\n          {mate.name}\n        </div>\n\n        <div className=\"column\">\n          <input type=\"number\" value={mate.d} onChange={this._onChangeD}/>\n          <span>d</span>\n          <input type=\"number\" value={mate.h} onChange={this._onChangeH}/>\n          <span>h</span>\n        </div>\n\n        <div className=\"column\">\n          <input type=\"number\" value={mate.efficiency} onChange={this._onChangeEff} />\n          <span>%</span>\n        </div>\n\n        <div className=\"column\">\n          <span>{total}</span>\n        </div>\n\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {forEach} from 'lodash'\n\nimport \"../style/App.scss\";\nimport {TeamMate} from \"./TeamMate\";\nimport {DataBlock} from \"../DataBlock\";\n\nexport class HoursPlanning extends React.Component {\n\n  static propTypes = {\n    title: PropTypes.string,\n    dataBlock: PropTypes.instanceOf(DataBlock)\n  };\n\n  _subscriptions;\n\n  constructor(props) {\n    super(props);\n    this._subscriptions = [];\n    this.state = {\n      team: [],\n      total: 0,\n      emergency: 0\n    }\n  }\n\n  componentDidMount() {\n    this._subscriptions.push(\n      this.props.dataBlock.team.subscribe((team) => {\n        this.setState(() => ({ team }));\n      })\n    );\n    this._subscriptions.push(\n      this.props.dataBlock.total.subscribe((total) => {\n        this.setState(() => ({ total }));\n      })\n    );\n    this._subscriptions.push(\n      this.props.dataBlock.emergency.subscribe((emergency) => {\n        this.setState(() => ({ emergency }));\n      })\n    );\n  }\n\n  _onChangeEmergency = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    this.props.dataBlock.changeEmergency(value);\n  };\n\n  render() {\n\n    const table = [];\n    forEach(this.state.team, (mate) => {\n      table.push(\n        <TeamMate\n          key={mate.name}\n          mate={mate}\n          dataBlock={this.props.dataBlock}\n        />\n      );\n    });\n\n    return (\n      <div className=\"hoursPlanning\">\n        <h3>{this.props.title}</h3>\n        <div className=\"table\">\n          <div className=\"team\">\n            {table}\n          </div>\n          <div className=\"emergency\">\n            <span>-</span>\n            <input type=\"number\" value={this.state.emergency} onChange={this._onChangeEmergency} />\n            <span>%</span>\n          </div>\n        </div>\n        <div className=\"total\">\n          <p>Total: {this.state.total}</p>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nimport {HeadingTitle} from \"./HeadingTitle\";\nimport {HoursPlanning} from \"./HoursPlanning\";\n\nimport \"../style/App.scss\";\nimport {DataBlock} from \"../DataBlock\";\n\nexport class HomePage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const frontEndTeam = [\n      { name: 'Cataldo', d: 10, h: 0, efficiency: 70 },\n      { name: 'Lisa', d: 6, h: 0, efficiency: 80 },\n      { name: 'Dennis', d: 10, h: 0, efficiency: 80 }\n    ];\n    const backEndTeam = [\n      { name: 'Davide B.', 'd': 10, 'h': 0, 'efficiency': 70},\n      { name: 'Davide P.', 'd': 10, 'h': 0, 'efficiency': 80},\n      { name: 'Alberto', 'd': 10, 'h': 0, 'efficiency': 30}\n    ];\n    this.frontEndTeamBlock = new DataBlock(frontEndTeam);\n    this.backEndTeamBlock = new DataBlock(backEndTeam);\n  }\n\n  componentDidMount() {\n    // TODO: sottoscriversi ai block per avere il report finale\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <HeadingTitle/>\n\n        <div className=\"sprintPlanning\">\n          <HoursPlanning title={'Front-end'} dataBlock={this.frontEndTeamBlock}/>\n          <HoursPlanning title={'Back-end'} dataBlock={this.backEndTeamBlock} />\n        </div>\n\n      </div>\n    )\n  }\n}\n","export const PATHS = {\n  MAIN: process.env.PUBLIC_URL + \"/\"\n};","import React from 'react';\nimport {Route} from \"react-router-dom\";\n\nimport {HomePage} from \"../components/HomePage\";\n\nimport {PATHS} from \"./PATHS\";\n\nfunction AppRouter() {\n  return [\n    <Route path={PATHS.MAIN} exact component={HomePage} key={\"homepage\"}/>\n  ];\n}\n\nexport default AppRouter;","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport AppRouter from \"./routing/AppRouter\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AppRouter/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}